// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onvifclidevice.proto

#ifndef PROTOBUF_onvifclidevice_2eproto__INCLUDED
#define PROTOBUF_onvifclidevice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class OnvifCliDeviceLoginReq;
class OnvifCliDeviceLoginReqDefaultTypeInternal;
extern OnvifCliDeviceLoginReqDefaultTypeInternal _OnvifCliDeviceLoginReq_default_instance_;
class OnvifCliDeviceLoginResp;
class OnvifCliDeviceLoginRespDefaultTypeInternal;
extern OnvifCliDeviceLoginRespDefaultTypeInternal _OnvifCliDeviceLoginResp_default_instance_;

namespace protobuf_onvifclidevice_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_onvifclidevice_2eproto

// ===================================================================

class OnvifCliDeviceLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnvifCliDeviceLoginReq) */ {
 public:
  OnvifCliDeviceLoginReq();
  virtual ~OnvifCliDeviceLoginReq();

  OnvifCliDeviceLoginReq(const OnvifCliDeviceLoginReq& from);

  inline OnvifCliDeviceLoginReq& operator=(const OnvifCliDeviceLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnvifCliDeviceLoginReq& default_instance();

  static inline const OnvifCliDeviceLoginReq* internal_default_instance() {
    return reinterpret_cast<const OnvifCliDeviceLoginReq*>(
               &_OnvifCliDeviceLoginReq_default_instance_);
  }

  void Swap(OnvifCliDeviceLoginReq* other);

  // implements Message ----------------------------------------------

  inline OnvifCliDeviceLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  OnvifCliDeviceLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnvifCliDeviceLoginReq& from);
  void MergeFrom(const OnvifCliDeviceLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnvifCliDeviceLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strUserName = 1;
  void clear_strusername();
  static const int kStrUserNameFieldNumber = 1;
  const ::std::string& strusername() const;
  void set_strusername(const ::std::string& value);
  #if LANG_CXX11
  void set_strusername(::std::string&& value);
  #endif
  void set_strusername(const char* value);
  void set_strusername(const char* value, size_t size);
  ::std::string* mutable_strusername();
  ::std::string* release_strusername();
  void set_allocated_strusername(::std::string* strusername);

  // string strPasswd = 2;
  void clear_strpasswd();
  static const int kStrPasswdFieldNumber = 2;
  const ::std::string& strpasswd() const;
  void set_strpasswd(const ::std::string& value);
  #if LANG_CXX11
  void set_strpasswd(::std::string&& value);
  #endif
  void set_strpasswd(const char* value);
  void set_strpasswd(const char* value, size_t size);
  ::std::string* mutable_strpasswd();
  ::std::string* release_strpasswd();
  void set_allocated_strpasswd(::std::string* strpasswd);

  // string strUrl = 3;
  void clear_strurl();
  static const int kStrUrlFieldNumber = 3;
  const ::std::string& strurl() const;
  void set_strurl(const ::std::string& value);
  #if LANG_CXX11
  void set_strurl(::std::string&& value);
  #endif
  void set_strurl(const char* value);
  void set_strurl(const char* value, size_t size);
  ::std::string* mutable_strurl();
  ::std::string* release_strurl();
  void set_allocated_strurl(::std::string* strurl);

  // @@protoc_insertion_point(class_scope:OnvifCliDeviceLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strusername_;
  ::google::protobuf::internal::ArenaStringPtr strpasswd_;
  ::google::protobuf::internal::ArenaStringPtr strurl_;
  mutable int _cached_size_;
  friend struct  protobuf_onvifclidevice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OnvifCliDeviceLoginResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnvifCliDeviceLoginResp) */ {
 public:
  OnvifCliDeviceLoginResp();
  virtual ~OnvifCliDeviceLoginResp();

  OnvifCliDeviceLoginResp(const OnvifCliDeviceLoginResp& from);

  inline OnvifCliDeviceLoginResp& operator=(const OnvifCliDeviceLoginResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnvifCliDeviceLoginResp& default_instance();

  static inline const OnvifCliDeviceLoginResp* internal_default_instance() {
    return reinterpret_cast<const OnvifCliDeviceLoginResp*>(
               &_OnvifCliDeviceLoginResp_default_instance_);
  }

  void Swap(OnvifCliDeviceLoginResp* other);

  // implements Message ----------------------------------------------

  inline OnvifCliDeviceLoginResp* New() const PROTOBUF_FINAL { return New(NULL); }

  OnvifCliDeviceLoginResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnvifCliDeviceLoginResp& from);
  void MergeFrom(const OnvifCliDeviceLoginResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnvifCliDeviceLoginResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strHandle = 1;
  void clear_strhandle();
  static const int kStrHandleFieldNumber = 1;
  const ::std::string& strhandle() const;
  void set_strhandle(const ::std::string& value);
  #if LANG_CXX11
  void set_strhandle(::std::string&& value);
  #endif
  void set_strhandle(const char* value);
  void set_strhandle(const char* value, size_t size);
  ::std::string* mutable_strhandle();
  ::std::string* release_strhandle();
  void set_allocated_strhandle(::std::string* strhandle);

  // bool bLogined = 2;
  void clear_blogined();
  static const int kBLoginedFieldNumber = 2;
  bool blogined() const;
  void set_blogined(bool value);

  // bool bHasPTZ = 3;
  void clear_bhasptz();
  static const int kBHasPTZFieldNumber = 3;
  bool bhasptz() const;
  void set_bhasptz(bool value);

  // bool bHasEvent = 4;
  void clear_bhasevent();
  static const int kBHasEventFieldNumber = 4;
  bool bhasevent() const;
  void set_bhasevent(bool value);

  // @@protoc_insertion_point(class_scope:OnvifCliDeviceLoginResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strhandle_;
  bool blogined_;
  bool bhasptz_;
  bool bhasevent_;
  mutable int _cached_size_;
  friend struct  protobuf_onvifclidevice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OnvifCliDeviceLoginReq

// string strUserName = 1;
inline void OnvifCliDeviceLoginReq::clear_strusername() {
  strusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnvifCliDeviceLoginReq::strusername() const {
  // @@protoc_insertion_point(field_get:OnvifCliDeviceLoginReq.strUserName)
  return strusername_.GetNoArena();
}
inline void OnvifCliDeviceLoginReq::set_strusername(const ::std::string& value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnvifCliDeviceLoginReq.strUserName)
}
#if LANG_CXX11
inline void OnvifCliDeviceLoginReq::set_strusername(::std::string&& value) {
  
  strusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnvifCliDeviceLoginReq.strUserName)
}
#endif
inline void OnvifCliDeviceLoginReq::set_strusername(const char* value) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnvifCliDeviceLoginReq.strUserName)
}
inline void OnvifCliDeviceLoginReq::set_strusername(const char* value, size_t size) {
  
  strusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnvifCliDeviceLoginReq.strUserName)
}
inline ::std::string* OnvifCliDeviceLoginReq::mutable_strusername() {
  
  // @@protoc_insertion_point(field_mutable:OnvifCliDeviceLoginReq.strUserName)
  return strusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnvifCliDeviceLoginReq::release_strusername() {
  // @@protoc_insertion_point(field_release:OnvifCliDeviceLoginReq.strUserName)
  
  return strusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnvifCliDeviceLoginReq::set_allocated_strusername(::std::string* strusername) {
  if (strusername != NULL) {
    
  } else {
    
  }
  strusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strusername);
  // @@protoc_insertion_point(field_set_allocated:OnvifCliDeviceLoginReq.strUserName)
}

// string strPasswd = 2;
inline void OnvifCliDeviceLoginReq::clear_strpasswd() {
  strpasswd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnvifCliDeviceLoginReq::strpasswd() const {
  // @@protoc_insertion_point(field_get:OnvifCliDeviceLoginReq.strPasswd)
  return strpasswd_.GetNoArena();
}
inline void OnvifCliDeviceLoginReq::set_strpasswd(const ::std::string& value) {
  
  strpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnvifCliDeviceLoginReq.strPasswd)
}
#if LANG_CXX11
inline void OnvifCliDeviceLoginReq::set_strpasswd(::std::string&& value) {
  
  strpasswd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnvifCliDeviceLoginReq.strPasswd)
}
#endif
inline void OnvifCliDeviceLoginReq::set_strpasswd(const char* value) {
  
  strpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnvifCliDeviceLoginReq.strPasswd)
}
inline void OnvifCliDeviceLoginReq::set_strpasswd(const char* value, size_t size) {
  
  strpasswd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnvifCliDeviceLoginReq.strPasswd)
}
inline ::std::string* OnvifCliDeviceLoginReq::mutable_strpasswd() {
  
  // @@protoc_insertion_point(field_mutable:OnvifCliDeviceLoginReq.strPasswd)
  return strpasswd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnvifCliDeviceLoginReq::release_strpasswd() {
  // @@protoc_insertion_point(field_release:OnvifCliDeviceLoginReq.strPasswd)
  
  return strpasswd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnvifCliDeviceLoginReq::set_allocated_strpasswd(::std::string* strpasswd) {
  if (strpasswd != NULL) {
    
  } else {
    
  }
  strpasswd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpasswd);
  // @@protoc_insertion_point(field_set_allocated:OnvifCliDeviceLoginReq.strPasswd)
}

// string strUrl = 3;
inline void OnvifCliDeviceLoginReq::clear_strurl() {
  strurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnvifCliDeviceLoginReq::strurl() const {
  // @@protoc_insertion_point(field_get:OnvifCliDeviceLoginReq.strUrl)
  return strurl_.GetNoArena();
}
inline void OnvifCliDeviceLoginReq::set_strurl(const ::std::string& value) {
  
  strurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnvifCliDeviceLoginReq.strUrl)
}
#if LANG_CXX11
inline void OnvifCliDeviceLoginReq::set_strurl(::std::string&& value) {
  
  strurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnvifCliDeviceLoginReq.strUrl)
}
#endif
inline void OnvifCliDeviceLoginReq::set_strurl(const char* value) {
  
  strurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnvifCliDeviceLoginReq.strUrl)
}
inline void OnvifCliDeviceLoginReq::set_strurl(const char* value, size_t size) {
  
  strurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnvifCliDeviceLoginReq.strUrl)
}
inline ::std::string* OnvifCliDeviceLoginReq::mutable_strurl() {
  
  // @@protoc_insertion_point(field_mutable:OnvifCliDeviceLoginReq.strUrl)
  return strurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnvifCliDeviceLoginReq::release_strurl() {
  // @@protoc_insertion_point(field_release:OnvifCliDeviceLoginReq.strUrl)
  
  return strurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnvifCliDeviceLoginReq::set_allocated_strurl(::std::string* strurl) {
  if (strurl != NULL) {
    
  } else {
    
  }
  strurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strurl);
  // @@protoc_insertion_point(field_set_allocated:OnvifCliDeviceLoginReq.strUrl)
}

// -------------------------------------------------------------------

// OnvifCliDeviceLoginResp

// string strHandle = 1;
inline void OnvifCliDeviceLoginResp::clear_strhandle() {
  strhandle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnvifCliDeviceLoginResp::strhandle() const {
  // @@protoc_insertion_point(field_get:OnvifCliDeviceLoginResp.strHandle)
  return strhandle_.GetNoArena();
}
inline void OnvifCliDeviceLoginResp::set_strhandle(const ::std::string& value) {
  
  strhandle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnvifCliDeviceLoginResp.strHandle)
}
#if LANG_CXX11
inline void OnvifCliDeviceLoginResp::set_strhandle(::std::string&& value) {
  
  strhandle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnvifCliDeviceLoginResp.strHandle)
}
#endif
inline void OnvifCliDeviceLoginResp::set_strhandle(const char* value) {
  
  strhandle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnvifCliDeviceLoginResp.strHandle)
}
inline void OnvifCliDeviceLoginResp::set_strhandle(const char* value, size_t size) {
  
  strhandle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnvifCliDeviceLoginResp.strHandle)
}
inline ::std::string* OnvifCliDeviceLoginResp::mutable_strhandle() {
  
  // @@protoc_insertion_point(field_mutable:OnvifCliDeviceLoginResp.strHandle)
  return strhandle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnvifCliDeviceLoginResp::release_strhandle() {
  // @@protoc_insertion_point(field_release:OnvifCliDeviceLoginResp.strHandle)
  
  return strhandle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnvifCliDeviceLoginResp::set_allocated_strhandle(::std::string* strhandle) {
  if (strhandle != NULL) {
    
  } else {
    
  }
  strhandle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strhandle);
  // @@protoc_insertion_point(field_set_allocated:OnvifCliDeviceLoginResp.strHandle)
}

// bool bLogined = 2;
inline void OnvifCliDeviceLoginResp::clear_blogined() {
  blogined_ = false;
}
inline bool OnvifCliDeviceLoginResp::blogined() const {
  // @@protoc_insertion_point(field_get:OnvifCliDeviceLoginResp.bLogined)
  return blogined_;
}
inline void OnvifCliDeviceLoginResp::set_blogined(bool value) {
  
  blogined_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliDeviceLoginResp.bLogined)
}

// bool bHasPTZ = 3;
inline void OnvifCliDeviceLoginResp::clear_bhasptz() {
  bhasptz_ = false;
}
inline bool OnvifCliDeviceLoginResp::bhasptz() const {
  // @@protoc_insertion_point(field_get:OnvifCliDeviceLoginResp.bHasPTZ)
  return bhasptz_;
}
inline void OnvifCliDeviceLoginResp::set_bhasptz(bool value) {
  
  bhasptz_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliDeviceLoginResp.bHasPTZ)
}

// bool bHasEvent = 4;
inline void OnvifCliDeviceLoginResp::clear_bhasevent() {
  bhasevent_ = false;
}
inline bool OnvifCliDeviceLoginResp::bhasevent() const {
  // @@protoc_insertion_point(field_get:OnvifCliDeviceLoginResp.bHasEvent)
  return bhasevent_;
}
inline void OnvifCliDeviceLoginResp::set_bhasevent(bool value) {
  
  bhasevent_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliDeviceLoginResp.bHasEvent)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_onvifclidevice_2eproto__INCLUDED
