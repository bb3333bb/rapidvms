// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onvifclimedia.proto

#ifndef PROTOBUF_onvifclimedia_2eproto__INCLUDED
#define PROTOBUF_onvifclimedia_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class OnvifCliMediaGetProfilesReq;
class OnvifCliMediaGetProfilesReqDefaultTypeInternal;
extern OnvifCliMediaGetProfilesReqDefaultTypeInternal _OnvifCliMediaGetProfilesReq_default_instance_;
class OnvifCliMediaGetProfilesResp;
class OnvifCliMediaGetProfilesRespDefaultTypeInternal;
extern OnvifCliMediaGetProfilesRespDefaultTypeInternal _OnvifCliMediaGetProfilesResp_default_instance_;
class OnvifCliProfile;
class OnvifCliProfileDefaultTypeInternal;
extern OnvifCliProfileDefaultTypeInternal _OnvifCliProfile_default_instance_;

namespace protobuf_onvifclimedia_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_onvifclimedia_2eproto

// ===================================================================

class OnvifCliProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnvifCliProfile) */ {
 public:
  OnvifCliProfile();
  virtual ~OnvifCliProfile();

  OnvifCliProfile(const OnvifCliProfile& from);

  inline OnvifCliProfile& operator=(const OnvifCliProfile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnvifCliProfile& default_instance();

  static inline const OnvifCliProfile* internal_default_instance() {
    return reinterpret_cast<const OnvifCliProfile*>(
               &_OnvifCliProfile_default_instance_);
  }

  void Swap(OnvifCliProfile* other);

  // implements Message ----------------------------------------------

  inline OnvifCliProfile* New() const PROTOBUF_FINAL { return New(NULL); }

  OnvifCliProfile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnvifCliProfile& from);
  void MergeFrom(const OnvifCliProfile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnvifCliProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strToken = 1;
  void clear_strtoken();
  static const int kStrTokenFieldNumber = 1;
  const ::std::string& strtoken() const;
  void set_strtoken(const ::std::string& value);
  #if LANG_CXX11
  void set_strtoken(::std::string&& value);
  #endif
  void set_strtoken(const char* value);
  void set_strtoken(const char* value, size_t size);
  ::std::string* mutable_strtoken();
  ::std::string* release_strtoken();
  void set_allocated_strtoken(::std::string* strtoken);

  // string strCodecName = 2;
  void clear_strcodecname();
  static const int kStrCodecNameFieldNumber = 2;
  const ::std::string& strcodecname() const;
  void set_strcodecname(const ::std::string& value);
  #if LANG_CXX11
  void set_strcodecname(::std::string&& value);
  #endif
  void set_strcodecname(const char* value);
  void set_strcodecname(const char* value, size_t size);
  ::std::string* mutable_strcodecname();
  ::std::string* release_strcodecname();
  void set_allocated_strcodecname(::std::string* strcodecname);

  // string strRTSPUrl = 3;
  void clear_strrtspurl();
  static const int kStrRTSPUrlFieldNumber = 3;
  const ::std::string& strrtspurl() const;
  void set_strrtspurl(const ::std::string& value);
  #if LANG_CXX11
  void set_strrtspurl(::std::string&& value);
  #endif
  void set_strrtspurl(const char* value);
  void set_strrtspurl(const char* value, size_t size);
  ::std::string* mutable_strrtspurl();
  ::std::string* release_strrtspurl();
  void set_allocated_strrtspurl(::std::string* strrtspurl);

  // int32 nWidth = 4;
  void clear_nwidth();
  static const int kNWidthFieldNumber = 4;
  ::google::protobuf::int32 nwidth() const;
  void set_nwidth(::google::protobuf::int32 value);

  // int32 nHeight = 5;
  void clear_nheight();
  static const int kNHeightFieldNumber = 5;
  ::google::protobuf::int32 nheight() const;
  void set_nheight(::google::protobuf::int32 value);

  // int32 nFps = 6;
  void clear_nfps();
  static const int kNFpsFieldNumber = 6;
  ::google::protobuf::int32 nfps() const;
  void set_nfps(::google::protobuf::int32 value);

  // int32 nBandWidth = 7;
  void clear_nbandwidth();
  static const int kNBandWidthFieldNumber = 7;
  ::google::protobuf::int32 nbandwidth() const;
  void set_nbandwidth(::google::protobuf::int32 value);

  // bool bGotUrl = 8;
  void clear_bgoturl();
  static const int kBGotUrlFieldNumber = 8;
  bool bgoturl() const;
  void set_bgoturl(bool value);

  // @@protoc_insertion_point(class_scope:OnvifCliProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strtoken_;
  ::google::protobuf::internal::ArenaStringPtr strcodecname_;
  ::google::protobuf::internal::ArenaStringPtr strrtspurl_;
  ::google::protobuf::int32 nwidth_;
  ::google::protobuf::int32 nheight_;
  ::google::protobuf::int32 nfps_;
  ::google::protobuf::int32 nbandwidth_;
  bool bgoturl_;
  mutable int _cached_size_;
  friend struct  protobuf_onvifclimedia_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OnvifCliMediaGetProfilesReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnvifCliMediaGetProfilesReq) */ {
 public:
  OnvifCliMediaGetProfilesReq();
  virtual ~OnvifCliMediaGetProfilesReq();

  OnvifCliMediaGetProfilesReq(const OnvifCliMediaGetProfilesReq& from);

  inline OnvifCliMediaGetProfilesReq& operator=(const OnvifCliMediaGetProfilesReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnvifCliMediaGetProfilesReq& default_instance();

  static inline const OnvifCliMediaGetProfilesReq* internal_default_instance() {
    return reinterpret_cast<const OnvifCliMediaGetProfilesReq*>(
               &_OnvifCliMediaGetProfilesReq_default_instance_);
  }

  void Swap(OnvifCliMediaGetProfilesReq* other);

  // implements Message ----------------------------------------------

  inline OnvifCliMediaGetProfilesReq* New() const PROTOBUF_FINAL { return New(NULL); }

  OnvifCliMediaGetProfilesReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnvifCliMediaGetProfilesReq& from);
  void MergeFrom(const OnvifCliMediaGetProfilesReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnvifCliMediaGetProfilesReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strstrHandle = 1;
  void clear_strstrhandle();
  static const int kStrstrHandleFieldNumber = 1;
  const ::std::string& strstrhandle() const;
  void set_strstrhandle(const ::std::string& value);
  #if LANG_CXX11
  void set_strstrhandle(::std::string&& value);
  #endif
  void set_strstrhandle(const char* value);
  void set_strstrhandle(const char* value, size_t size);
  ::std::string* mutable_strstrhandle();
  ::std::string* release_strstrhandle();
  void set_allocated_strstrhandle(::std::string* strstrhandle);

  // @@protoc_insertion_point(class_scope:OnvifCliMediaGetProfilesReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strstrhandle_;
  mutable int _cached_size_;
  friend struct  protobuf_onvifclimedia_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OnvifCliMediaGetProfilesResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnvifCliMediaGetProfilesResp) */ {
 public:
  OnvifCliMediaGetProfilesResp();
  virtual ~OnvifCliMediaGetProfilesResp();

  OnvifCliMediaGetProfilesResp(const OnvifCliMediaGetProfilesResp& from);

  inline OnvifCliMediaGetProfilesResp& operator=(const OnvifCliMediaGetProfilesResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnvifCliMediaGetProfilesResp& default_instance();

  static inline const OnvifCliMediaGetProfilesResp* internal_default_instance() {
    return reinterpret_cast<const OnvifCliMediaGetProfilesResp*>(
               &_OnvifCliMediaGetProfilesResp_default_instance_);
  }

  void Swap(OnvifCliMediaGetProfilesResp* other);

  // implements Message ----------------------------------------------

  inline OnvifCliMediaGetProfilesResp* New() const PROTOBUF_FINAL { return New(NULL); }

  OnvifCliMediaGetProfilesResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnvifCliMediaGetProfilesResp& from);
  void MergeFrom(const OnvifCliMediaGetProfilesResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnvifCliMediaGetProfilesResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .OnvifCliProfile cProfiles = 2;
  int cprofiles_size() const;
  void clear_cprofiles();
  static const int kCProfilesFieldNumber = 2;
  const ::OnvifCliProfile& cprofiles(int index) const;
  ::OnvifCliProfile* mutable_cprofiles(int index);
  ::OnvifCliProfile* add_cprofiles();
  ::google::protobuf::RepeatedPtrField< ::OnvifCliProfile >*
      mutable_cprofiles();
  const ::google::protobuf::RepeatedPtrField< ::OnvifCliProfile >&
      cprofiles() const;

  // bool bGotProfiles = 1;
  void clear_bgotprofiles();
  static const int kBGotProfilesFieldNumber = 1;
  bool bgotprofiles() const;
  void set_bgotprofiles(bool value);

  // @@protoc_insertion_point(class_scope:OnvifCliMediaGetProfilesResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::OnvifCliProfile > cprofiles_;
  bool bgotprofiles_;
  mutable int _cached_size_;
  friend struct  protobuf_onvifclimedia_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OnvifCliProfile

// string strToken = 1;
inline void OnvifCliProfile::clear_strtoken() {
  strtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnvifCliProfile::strtoken() const {
  // @@protoc_insertion_point(field_get:OnvifCliProfile.strToken)
  return strtoken_.GetNoArena();
}
inline void OnvifCliProfile::set_strtoken(const ::std::string& value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnvifCliProfile.strToken)
}
#if LANG_CXX11
inline void OnvifCliProfile::set_strtoken(::std::string&& value) {
  
  strtoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnvifCliProfile.strToken)
}
#endif
inline void OnvifCliProfile::set_strtoken(const char* value) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnvifCliProfile.strToken)
}
inline void OnvifCliProfile::set_strtoken(const char* value, size_t size) {
  
  strtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnvifCliProfile.strToken)
}
inline ::std::string* OnvifCliProfile::mutable_strtoken() {
  
  // @@protoc_insertion_point(field_mutable:OnvifCliProfile.strToken)
  return strtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnvifCliProfile::release_strtoken() {
  // @@protoc_insertion_point(field_release:OnvifCliProfile.strToken)
  
  return strtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnvifCliProfile::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken != NULL) {
    
  } else {
    
  }
  strtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtoken);
  // @@protoc_insertion_point(field_set_allocated:OnvifCliProfile.strToken)
}

// string strCodecName = 2;
inline void OnvifCliProfile::clear_strcodecname() {
  strcodecname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnvifCliProfile::strcodecname() const {
  // @@protoc_insertion_point(field_get:OnvifCliProfile.strCodecName)
  return strcodecname_.GetNoArena();
}
inline void OnvifCliProfile::set_strcodecname(const ::std::string& value) {
  
  strcodecname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnvifCliProfile.strCodecName)
}
#if LANG_CXX11
inline void OnvifCliProfile::set_strcodecname(::std::string&& value) {
  
  strcodecname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnvifCliProfile.strCodecName)
}
#endif
inline void OnvifCliProfile::set_strcodecname(const char* value) {
  
  strcodecname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnvifCliProfile.strCodecName)
}
inline void OnvifCliProfile::set_strcodecname(const char* value, size_t size) {
  
  strcodecname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnvifCliProfile.strCodecName)
}
inline ::std::string* OnvifCliProfile::mutable_strcodecname() {
  
  // @@protoc_insertion_point(field_mutable:OnvifCliProfile.strCodecName)
  return strcodecname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnvifCliProfile::release_strcodecname() {
  // @@protoc_insertion_point(field_release:OnvifCliProfile.strCodecName)
  
  return strcodecname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnvifCliProfile::set_allocated_strcodecname(::std::string* strcodecname) {
  if (strcodecname != NULL) {
    
  } else {
    
  }
  strcodecname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcodecname);
  // @@protoc_insertion_point(field_set_allocated:OnvifCliProfile.strCodecName)
}

// string strRTSPUrl = 3;
inline void OnvifCliProfile::clear_strrtspurl() {
  strrtspurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnvifCliProfile::strrtspurl() const {
  // @@protoc_insertion_point(field_get:OnvifCliProfile.strRTSPUrl)
  return strrtspurl_.GetNoArena();
}
inline void OnvifCliProfile::set_strrtspurl(const ::std::string& value) {
  
  strrtspurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnvifCliProfile.strRTSPUrl)
}
#if LANG_CXX11
inline void OnvifCliProfile::set_strrtspurl(::std::string&& value) {
  
  strrtspurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnvifCliProfile.strRTSPUrl)
}
#endif
inline void OnvifCliProfile::set_strrtspurl(const char* value) {
  
  strrtspurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnvifCliProfile.strRTSPUrl)
}
inline void OnvifCliProfile::set_strrtspurl(const char* value, size_t size) {
  
  strrtspurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnvifCliProfile.strRTSPUrl)
}
inline ::std::string* OnvifCliProfile::mutable_strrtspurl() {
  
  // @@protoc_insertion_point(field_mutable:OnvifCliProfile.strRTSPUrl)
  return strrtspurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnvifCliProfile::release_strrtspurl() {
  // @@protoc_insertion_point(field_release:OnvifCliProfile.strRTSPUrl)
  
  return strrtspurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnvifCliProfile::set_allocated_strrtspurl(::std::string* strrtspurl) {
  if (strrtspurl != NULL) {
    
  } else {
    
  }
  strrtspurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strrtspurl);
  // @@protoc_insertion_point(field_set_allocated:OnvifCliProfile.strRTSPUrl)
}

// int32 nWidth = 4;
inline void OnvifCliProfile::clear_nwidth() {
  nwidth_ = 0;
}
inline ::google::protobuf::int32 OnvifCliProfile::nwidth() const {
  // @@protoc_insertion_point(field_get:OnvifCliProfile.nWidth)
  return nwidth_;
}
inline void OnvifCliProfile::set_nwidth(::google::protobuf::int32 value) {
  
  nwidth_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliProfile.nWidth)
}

// int32 nHeight = 5;
inline void OnvifCliProfile::clear_nheight() {
  nheight_ = 0;
}
inline ::google::protobuf::int32 OnvifCliProfile::nheight() const {
  // @@protoc_insertion_point(field_get:OnvifCliProfile.nHeight)
  return nheight_;
}
inline void OnvifCliProfile::set_nheight(::google::protobuf::int32 value) {
  
  nheight_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliProfile.nHeight)
}

// int32 nFps = 6;
inline void OnvifCliProfile::clear_nfps() {
  nfps_ = 0;
}
inline ::google::protobuf::int32 OnvifCliProfile::nfps() const {
  // @@protoc_insertion_point(field_get:OnvifCliProfile.nFps)
  return nfps_;
}
inline void OnvifCliProfile::set_nfps(::google::protobuf::int32 value) {
  
  nfps_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliProfile.nFps)
}

// int32 nBandWidth = 7;
inline void OnvifCliProfile::clear_nbandwidth() {
  nbandwidth_ = 0;
}
inline ::google::protobuf::int32 OnvifCliProfile::nbandwidth() const {
  // @@protoc_insertion_point(field_get:OnvifCliProfile.nBandWidth)
  return nbandwidth_;
}
inline void OnvifCliProfile::set_nbandwidth(::google::protobuf::int32 value) {
  
  nbandwidth_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliProfile.nBandWidth)
}

// bool bGotUrl = 8;
inline void OnvifCliProfile::clear_bgoturl() {
  bgoturl_ = false;
}
inline bool OnvifCliProfile::bgoturl() const {
  // @@protoc_insertion_point(field_get:OnvifCliProfile.bGotUrl)
  return bgoturl_;
}
inline void OnvifCliProfile::set_bgoturl(bool value) {
  
  bgoturl_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliProfile.bGotUrl)
}

// -------------------------------------------------------------------

// OnvifCliMediaGetProfilesReq

// string strstrHandle = 1;
inline void OnvifCliMediaGetProfilesReq::clear_strstrhandle() {
  strstrhandle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnvifCliMediaGetProfilesReq::strstrhandle() const {
  // @@protoc_insertion_point(field_get:OnvifCliMediaGetProfilesReq.strstrHandle)
  return strstrhandle_.GetNoArena();
}
inline void OnvifCliMediaGetProfilesReq::set_strstrhandle(const ::std::string& value) {
  
  strstrhandle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnvifCliMediaGetProfilesReq.strstrHandle)
}
#if LANG_CXX11
inline void OnvifCliMediaGetProfilesReq::set_strstrhandle(::std::string&& value) {
  
  strstrhandle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnvifCliMediaGetProfilesReq.strstrHandle)
}
#endif
inline void OnvifCliMediaGetProfilesReq::set_strstrhandle(const char* value) {
  
  strstrhandle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnvifCliMediaGetProfilesReq.strstrHandle)
}
inline void OnvifCliMediaGetProfilesReq::set_strstrhandle(const char* value, size_t size) {
  
  strstrhandle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnvifCliMediaGetProfilesReq.strstrHandle)
}
inline ::std::string* OnvifCliMediaGetProfilesReq::mutable_strstrhandle() {
  
  // @@protoc_insertion_point(field_mutable:OnvifCliMediaGetProfilesReq.strstrHandle)
  return strstrhandle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnvifCliMediaGetProfilesReq::release_strstrhandle() {
  // @@protoc_insertion_point(field_release:OnvifCliMediaGetProfilesReq.strstrHandle)
  
  return strstrhandle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnvifCliMediaGetProfilesReq::set_allocated_strstrhandle(::std::string* strstrhandle) {
  if (strstrhandle != NULL) {
    
  } else {
    
  }
  strstrhandle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strstrhandle);
  // @@protoc_insertion_point(field_set_allocated:OnvifCliMediaGetProfilesReq.strstrHandle)
}

// -------------------------------------------------------------------

// OnvifCliMediaGetProfilesResp

// bool bGotProfiles = 1;
inline void OnvifCliMediaGetProfilesResp::clear_bgotprofiles() {
  bgotprofiles_ = false;
}
inline bool OnvifCliMediaGetProfilesResp::bgotprofiles() const {
  // @@protoc_insertion_point(field_get:OnvifCliMediaGetProfilesResp.bGotProfiles)
  return bgotprofiles_;
}
inline void OnvifCliMediaGetProfilesResp::set_bgotprofiles(bool value) {
  
  bgotprofiles_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliMediaGetProfilesResp.bGotProfiles)
}

// repeated .OnvifCliProfile cProfiles = 2;
inline int OnvifCliMediaGetProfilesResp::cprofiles_size() const {
  return cprofiles_.size();
}
inline void OnvifCliMediaGetProfilesResp::clear_cprofiles() {
  cprofiles_.Clear();
}
inline const ::OnvifCliProfile& OnvifCliMediaGetProfilesResp::cprofiles(int index) const {
  // @@protoc_insertion_point(field_get:OnvifCliMediaGetProfilesResp.cProfiles)
  return cprofiles_.Get(index);
}
inline ::OnvifCliProfile* OnvifCliMediaGetProfilesResp::mutable_cprofiles(int index) {
  // @@protoc_insertion_point(field_mutable:OnvifCliMediaGetProfilesResp.cProfiles)
  return cprofiles_.Mutable(index);
}
inline ::OnvifCliProfile* OnvifCliMediaGetProfilesResp::add_cprofiles() {
  // @@protoc_insertion_point(field_add:OnvifCliMediaGetProfilesResp.cProfiles)
  return cprofiles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OnvifCliProfile >*
OnvifCliMediaGetProfilesResp::mutable_cprofiles() {
  // @@protoc_insertion_point(field_mutable_list:OnvifCliMediaGetProfilesResp.cProfiles)
  return &cprofiles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OnvifCliProfile >&
OnvifCliMediaGetProfilesResp::cprofiles() const {
  // @@protoc_insertion_point(field_list:OnvifCliMediaGetProfilesResp.cProfiles)
  return cprofiles_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_onvifclimedia_2eproto__INCLUDED
