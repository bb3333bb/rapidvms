// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onvifcliptz.proto

#ifndef PROTOBUF_onvifcliptz_2eproto__INCLUDED
#define PROTOBUF_onvifcliptz_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class OnvifCliPTZReq;
class OnvifCliPTZReqDefaultTypeInternal;
extern OnvifCliPTZReqDefaultTypeInternal _OnvifCliPTZReq_default_instance_;
class OnvifCliPTZResp;
class OnvifCliPTZRespDefaultTypeInternal;
extern OnvifCliPTZRespDefaultTypeInternal _OnvifCliPTZResp_default_instance_;

namespace protobuf_onvifcliptz_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_onvifcliptz_2eproto

enum OnvifCliPTZCmdType {
  CLI_PTZ_UP = 0,
  CLI_PTZ_DOWN = 1,
  CLI_PTZ_LEFT = 2,
  CLI_PTZ_RIGHT = 3,
  CLI_PTZ_ZOOM_IN = 4,
  CLI_PTZ_ZOOM_OUT = 5,
  CLI_PTZ_STOP = 6,
  OnvifCliPTZCmdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OnvifCliPTZCmdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OnvifCliPTZCmdType_IsValid(int value);
const OnvifCliPTZCmdType OnvifCliPTZCmdType_MIN = CLI_PTZ_UP;
const OnvifCliPTZCmdType OnvifCliPTZCmdType_MAX = CLI_PTZ_STOP;
const int OnvifCliPTZCmdType_ARRAYSIZE = OnvifCliPTZCmdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OnvifCliPTZCmdType_descriptor();
inline const ::std::string& OnvifCliPTZCmdType_Name(OnvifCliPTZCmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OnvifCliPTZCmdType_descriptor(), value);
}
inline bool OnvifCliPTZCmdType_Parse(
    const ::std::string& name, OnvifCliPTZCmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OnvifCliPTZCmdType>(
    OnvifCliPTZCmdType_descriptor(), name, value);
}
// ===================================================================

class OnvifCliPTZReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnvifCliPTZReq) */ {
 public:
  OnvifCliPTZReq();
  virtual ~OnvifCliPTZReq();

  OnvifCliPTZReq(const OnvifCliPTZReq& from);

  inline OnvifCliPTZReq& operator=(const OnvifCliPTZReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnvifCliPTZReq& default_instance();

  static inline const OnvifCliPTZReq* internal_default_instance() {
    return reinterpret_cast<const OnvifCliPTZReq*>(
               &_OnvifCliPTZReq_default_instance_);
  }

  void Swap(OnvifCliPTZReq* other);

  // implements Message ----------------------------------------------

  inline OnvifCliPTZReq* New() const PROTOBUF_FINAL { return New(NULL); }

  OnvifCliPTZReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnvifCliPTZReq& from);
  void MergeFrom(const OnvifCliPTZReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnvifCliPTZReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // .OnvifCliPTZCmdType cmd = 2;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::OnvifCliPTZCmdType cmd() const;
  void set_cmd(::OnvifCliPTZCmdType value);

  // float speed = 3;
  void clear_speed();
  static const int kSpeedFieldNumber = 3;
  float speed() const;
  void set_speed(float value);

  // @@protoc_insertion_point(class_scope:OnvifCliPTZReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  int cmd_;
  float speed_;
  mutable int _cached_size_;
  friend struct  protobuf_onvifcliptz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OnvifCliPTZResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnvifCliPTZResp) */ {
 public:
  OnvifCliPTZResp();
  virtual ~OnvifCliPTZResp();

  OnvifCliPTZResp(const OnvifCliPTZResp& from);

  inline OnvifCliPTZResp& operator=(const OnvifCliPTZResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnvifCliPTZResp& default_instance();

  static inline const OnvifCliPTZResp* internal_default_instance() {
    return reinterpret_cast<const OnvifCliPTZResp*>(
               &_OnvifCliPTZResp_default_instance_);
  }

  void Swap(OnvifCliPTZResp* other);

  // implements Message ----------------------------------------------

  inline OnvifCliPTZResp* New() const PROTOBUF_FINAL { return New(NULL); }

  OnvifCliPTZResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnvifCliPTZResp& from);
  void MergeFrom(const OnvifCliPTZResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnvifCliPTZResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool bRet = 1;
  void clear_bret();
  static const int kBRetFieldNumber = 1;
  bool bret() const;
  void set_bret(bool value);

  // @@protoc_insertion_point(class_scope:OnvifCliPTZResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool bret_;
  mutable int _cached_size_;
  friend struct  protobuf_onvifcliptz_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OnvifCliPTZReq

// string token = 1;
inline void OnvifCliPTZReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnvifCliPTZReq::token() const {
  // @@protoc_insertion_point(field_get:OnvifCliPTZReq.token)
  return token_.GetNoArena();
}
inline void OnvifCliPTZReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnvifCliPTZReq.token)
}
#if LANG_CXX11
inline void OnvifCliPTZReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnvifCliPTZReq.token)
}
#endif
inline void OnvifCliPTZReq::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnvifCliPTZReq.token)
}
inline void OnvifCliPTZReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnvifCliPTZReq.token)
}
inline ::std::string* OnvifCliPTZReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:OnvifCliPTZReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnvifCliPTZReq::release_token() {
  // @@protoc_insertion_point(field_release:OnvifCliPTZReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnvifCliPTZReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:OnvifCliPTZReq.token)
}

// .OnvifCliPTZCmdType cmd = 2;
inline void OnvifCliPTZReq::clear_cmd() {
  cmd_ = 0;
}
inline ::OnvifCliPTZCmdType OnvifCliPTZReq::cmd() const {
  // @@protoc_insertion_point(field_get:OnvifCliPTZReq.cmd)
  return static_cast< ::OnvifCliPTZCmdType >(cmd_);
}
inline void OnvifCliPTZReq::set_cmd(::OnvifCliPTZCmdType value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliPTZReq.cmd)
}

// float speed = 3;
inline void OnvifCliPTZReq::clear_speed() {
  speed_ = 0;
}
inline float OnvifCliPTZReq::speed() const {
  // @@protoc_insertion_point(field_get:OnvifCliPTZReq.speed)
  return speed_;
}
inline void OnvifCliPTZReq::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliPTZReq.speed)
}

// -------------------------------------------------------------------

// OnvifCliPTZResp

// bool bRet = 1;
inline void OnvifCliPTZResp::clear_bret() {
  bret_ = false;
}
inline bool OnvifCliPTZResp::bret() const {
  // @@protoc_insertion_point(field_get:OnvifCliPTZResp.bRet)
  return bret_;
}
inline void OnvifCliPTZResp::set_bret(bool value) {
  
  bret_ = value;
  // @@protoc_insertion_point(field_set:OnvifCliPTZResp.bRet)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::OnvifCliPTZCmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OnvifCliPTZCmdType>() {
  return ::OnvifCliPTZCmdType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_onvifcliptz_2eproto__INCLUDED
